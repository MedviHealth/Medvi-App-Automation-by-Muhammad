name: MEDVi App Automation CI/CD

on:
  schedule:
    - cron: "*/15 * * * *"   # Every 15 minutes
  workflow_dispatch:         # Allow manual runs
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    env:
      PYTHONUNBUFFERED: "1"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PLAYWRIGHT_BROWSERS_PATH: /ms-playwright

    steps:
      - name: 游닌 Checkout Code
        uses: actions/checkout@v4

      - name: 游냀 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: 游닍 Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            /ms-playwright
          key: ${{ runner.os }}-deps-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: 游닌 Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 游꿠 Install Playwright Browsers
        run: |
          playwright install chromium
          playwright install-deps chromium

      - name: 游늬 Create Directories
        run: |
          mkdir -p screenshots
          mkdir -p allure-results
          mkdir -p reports

      - name: 游빍 Run Tests with Allure
        run: |
          pytest \
            --alluredir=allure-results \
            --clean-alluredir \
            --junitxml=reports/junit.xml \
            --html=reports/report.html \
            --self-contained-html \
            -v \
            --tb=short \
            --maxfail=1

      - name: 游늵 Generate Allure Report
        if: always()
        run: |
          allure generate allure-results --clean -o allure-report

      - name: 游닋 Upload Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: |
            allure-results/
            allure-report/
            screenshots/
            reports/
          retention-days: 30

      - name: 游늳 Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ github.run_number }}
          path: allure-results/
          retention-days: 30

  publish-report:
    if: always()
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: 游닌 Checkout Code
        uses: actions/checkout@v4

      - name: 游닌 Download Allure Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-${{ github.run_number }}
          path: allure-results

      - name: 游늵 Generate Allure Report
        run: |
          allure generate allure-results --clean -o allure-report

      - name: 游깷 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
          destination_dir: .